// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

// The spec for the cost estimator.

edition = "2023";

package brain.evolution.graphs.joy;

import "evolution/projects/graphs/joy/embed_wall_clock_cost_estimator_spec.proto";
import "evolution/projects/graphs/joy/num_constants_cost_estimator_spec.proto";
import "evolution/projects/graphs/joy/num_interactions_cost_estimator_spec.proto";
import "evolution/projects/graphs/joy/num_transforms_cost_estimator_spec.proto";
import "evolution/projects/graphs/joy/wall_clock_cost_estimator_spec.proto";

message CostEstimatorSpec {
  // Which cost estimator to use.
  oneof cost_estimator_type {
    // Optimizes the total number of transform ops (i.e. does not count
    // input or output ops).
    NumTransformsCostEstimatorSpec num_transforms = 1;

    // Optimizes the number of vertices that interact with the inputs.
    NumInteractionsCostEstimatorSpec num_interactions = 3;

    // Optimizes the number of constants.
    NumConstantsCostEstimatorSpec num_constants = 4;

    // This objective optimizes the execution time of the compiled function.
    WallClockCostEstimatorSpec wall_clock = 2;

    // This objective optimizes the execution time of the compiled function but
    // uses embedding instead of stacking.
    EmbedWallClockCostEstimatorSpec embed_wall_clock = 5;
  }
}
